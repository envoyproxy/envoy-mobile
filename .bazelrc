# Envoy Mobile Bazel build/test options.
try-import ./envoy/.bazelrc

# Common flags for all builds
build --define=google_grpc=disabled
build --define=hot_restart=disabled
build --define=tcmalloc=disabled
build --features=debug_prefix_map_pwd_is_dot
build --features=swift.cacheable_swiftmodules
# Remove once https://github.com/bazelbuild/rules_swift/pull/427 is merged
build --swiftcopt=-Xfrontend --swiftcopt=-no-serialize-debugging-options
build --host_force_python=PY3
build --ios_minimum_os=11.0
build --ios_simulator_device="iPhone 12"
build --ios_simulator_version=14.4
build --spawn_strategy=local
build --verbose_failures
build --workspace_status_command=envoy/bazel/get_workspace_status
build --xcode_version=12.4
build --javabase=@bazel_tools//tools/jdk:jdk
build --define disable_known_issue_asserts=true
build --define cxxopts=-std=c++17
# https://github.com/bazelbuild/bazel/issues/10674#issuecomment-658208918
build --incompatible_objc_compile_info_migration
# Unset per_object_debug_info. Causes failures on Android Linux release builds.
build --features=-per_object_debug_info
# Suppress deprecated declaration warnings due to extensive transitive noise from protobuf.
build --copt -Wno-deprecated-declarations
build --@envoy//bazel:http3=False

# Default flags for builds targeting iOS
# Manual stamping is necessary in order to get versioning information in the iOS
# static framework.
# More information on stamping can be found here:
# https://github.com/envoyproxy/envoy/tree/master/bazel#enabling-optional-features
build:ios --define=manual_stamp=manual_stamp

# Default flags for builds targeting Android
build:android --define=logger=android

# Locally-runnable ASAN config for MacOS & Linux with standard dev environment
# See also:
# https://github.com/bazelbuild/bazel/issues/6932
build:asan-dev --strip=never
build:asan-dev --copt -Wno-macro-redefined # ASAN sets _FORTIFY_SOURCE=0
build:asan-dev --copt -DADDRESS_SANITIZER
build:asan-dev --copt -D_LIBCPP_HAS_NO_ASAN
build:asan-dev --copt -g
build:asan-dev --copt -fno-omit-frame-pointer
build:asan-dev --copt -fno-optimize-sibling-calls
build:asan-dev --copt -fsanitize=address
build:asan-dev --linkopt -fsanitize=address
build:asan-dev --platform_suffix=-asan

build:clang-asan --linkopt --rtlib=compiler-rt
build:clang-asan --linkopt --unwindlib=libgcc

# Locally-runnable TSAN config
build:tsan-dev --features=tsan
build:tsan-dev --copt -fsanitize=thread
build:tsan-dev --linkopt -fsanitize=thread
build:tsan-dev --test_env=ENVOY_IP_TEST_VERSIONS=v4only
build:tsan-dev --platform_suffix=-tsan
# Needed due to https://github.com/libevent/libevent/issues/777
build:tsan-dev --copt -DEVENT__DISABLE_DEBUG_MODE

# Exclude debug info from the release binary since it makes it too large to fit
# into a zip file. This shouldn't affect crash reports.
build:release-common --define=no_debug_info=1

# Flags for release builds targeting iOS
build:release-ios --apple_bitcode=embedded
build:release-ios --config=ios
build:release-ios --config=release-common
build:release-ios --copt=-fembed-bitcode
build:release-ios --compilation_mode=opt

# Flags for release builds targeting Android or the JVM
build:release-android --config=android
build:release-android --config=release-common
build:release-android --compilation_mode=opt

# Instrument Envoy Mobile's C++ code for coverage
build:coverage --instrumentation_filter="//library/common[/:]"
build:coverage --host_javabase=@bazel_tools//tools/jdk:remote_jdk11
build:coverage --javabase=@bazel_tools//tools/jdk:remote_jdk11

#############################################################################
# Experimental EngFlow Remote Execution Configs
#############################################################################
# Common engflow flags
build:engflow --define=EXECUTOR=remote
build:engflow --disk_cache=
build:engflow --experimental_inmemory_dotd_files
build:engflow --experimental_inmemory_jdeps_files
build:engflow --incompatible_strict_action_env=true
build:engflow --remote_timeout=600
build:engflow --spawn_strategy=remote,local
# Platform and toolchain flags
build:engflow --action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
build:engflow --crosstool_top=@engflow_remote_config//cc:toolchain
build:engflow --extra_execution_platforms=@engflow_remote_config//config:platform
build:engflow --extra_toolchains=@engflow_remote_config//config:cc-toolchain
build:engflow --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_java11
build:engflow --host_javabase=@engflow_remote_config//java:jdk
build:engflow --host_platform=@engflow_remote_config//config:platform
build:engflow --java_toolchain=@bazel_tools//tools/jdk:toolchain_java11
build:engflow --javabase=@engflow_remote_config//java:jdk
build:engflow --platforms=@engflow_remote_config//config:platform
#############################################################################
# _remote-ci: These options are valid for any platform, use the configs below
# to add platform-specific options. Avoid using this config directly and
# instead use a platform-specific config
#############################################################################
# --config=remote sets --auth_enabled=true to enable GCP authentication,
# however, the remote execution cluster doesn't use GCP auth (it uses
# GITHUB_TOKEN auth) so we have to override it to 'false' here.
build:_remote-ci --config=remote
build:_remote-ci --auth_enabled=false
build:_remote-ci --remote_executor=grpcs://envoy.cluster.engflow.com
build:_remote-ci --bes_backend=grpcs://envoy.cluster.engflow.com/
build:_remote-ci --bes_results_url=https://envoy.cluster.engflow.com/invocation/
build:_remote-ci --bes_lifecycle_events
build:_remote-ci --jobs=40
build:_remote-ci --verbose_failures
#############################################################################
# remote-ci-linux: These options are linux-only
#############################################################################
build:remote-ci-linux --config=engflow
build:remote-ci-linux --config=_remote-ci
build:remote-ci-linux --remote_default_exec_properties=Pool=linux
#############################################################################
# remote-ci-macos: These options are macOS-only
#############################################################################
build:remote-ci-macos --config=_remote-ci
build:remote-ci-macos --remote_default_exec_properties=Pool=macos
#############################################################################
# Experimental EngFlow Remote Execution Configs
#############################################################################
