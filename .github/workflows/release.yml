name: release

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  android_release_artifacts:
    name: android_release_artifacts
    runs-on: macos-12
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
          java-package: jdk
          architecture: x64
      - run: ./ci/mac_ci_setup.sh --android
        name: 'Install dependencies'
      - name: 'Build envoy.aar distributable'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          current_release_version=$(git describe --tag --abbrev=0)
          ./bazelw build \
              --config=release-android \
              --fat_apk_cpu=x86,x86_64,armeabi-v7a,arm64-v8a \
              --define=pom_version="${current_release_version:1}" \
              --config=remote-ci-macos \
              --remote_header="Authorization=Bearer $GITHUB_TOKEN" \
              //:android_dist
      - name: 'Tar artifacts'
        run: tar -czvf envoy_android_aar_sources.tar.gz bazel-bin/library/kotlin/io/envoyproxy/envoymobile/envoy.aar bazel-bin/library/kotlin/io/envoyproxy/envoymobile/envoy-pom.xml bazel-bin/library/kotlin/io/envoyproxy/envoymobile/envoy-sources.jar bazel-bin/library/kotlin/io/envoyproxy/envoymobile/envoy-javadoc.jar
      - uses: actions/upload-artifact@v2
        with:
          name: envoy_android_aar_sources
          path: ./envoy_android_aar_sources.tar.gz

  android_release_deploy:
    name: android_release_deploy
    if: startsWith(github.ref, 'refs/tags/v')
    needs: android_release_artifacts
    runs-on: ubuntu-18.04
    timeout-minutes: 240
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - uses: actions/download-artifact@v3
        with:
          name: envoy_android_aar_sources
          path: .
      - name: Expand archive
        run: |
          tar -xvf envoy_android_aar_sources.tar.gz
          mv bazel-bin/library/kotlin/io/envoyproxy/envoymobile/* .
      - name: 'Configure envoy-bot git user'
        run: |
          # Switch global user to be envoy-bot for deployment
          git config --global user.email "envoy-bot@users.noreply.github.com"
          git config --global user.name "envoy-bot"
      - name: 'Configure gpg signing'
        env:
          GPG_KEY: ${{ secrets.gpg_key }}
          GPG_KEY_NAME: ${{ secrets.gpg_key_name }}
          GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
        run: |
          # https://github.com/keybase/keybase-issues/issues/2798
          export GPG_TTY=$(tty)
          # Import gpg keys and warm the passphrase to avoid the gpg
          # passphrase prompt when initating a deploy
          # `--pinentry-mode=loopback` could be needed to ensure we
          # suppress the gpg prompt
          echo $GPG_KEY | base64 --decode > signing-key
          gpg --passphrase $GPG_PASSPHRASE --batch --import signing-key
          shred signing-key

          gpg --pinentry-mode=loopback --passphrase $GPG_PASSPHRASE -ab envoy.aar
          gpg --pinentry-mode=loopback --passphrase $GPG_PASSPHRASE -ab envoy-pom.xml
          gpg --pinentry-mode=loopback --passphrase $GPG_PASSPHRASE -ab envoy-javadoc.jar
          gpg --pinentry-mode=loopback --passphrase $GPG_PASSPHRASE -ab envoy-sources.jar
      - name: 'Release to sonatype repository'
        env:
          READWRITE_USER: ${{ secrets.sonatype_user }}
          READWRITE_API_KEY: ${{ secrets.sonatype_password }}
          ENVOY_PROXY_PROFILE_ID: ${{ secrets.envoy_proxy_profile_id }}
        run: |
          current_release_tag=$(git describe --tags --abbrev=0 --exact-match)
          python ci/sonatype_nexus_upload.py \
            --profile_id=$ENVOY_PROXY_PROFILE_ID \
            --version="${current_release_tag:1}" \
            --files \
                envoy.aar \
                envoy-pom.xml \
                envoy-sources.jar \
                envoy-javadoc.jar \
          --signed_files \
                envoy.aar.asc \
                envoy-pom.xml.asc \
                envoy-sources.jar.asc \
                envoy-javadoc.jar.asc

  ios_release_artifacts:
    name: ios_release_artifacts
    runs-on: macos-12
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: 'Install dependencies'
        run: ./ci/mac_ci_setup.sh
      - name: 'Build Envoy.xcframework'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./bazelw build \
            --config=release-ios \
            --config=remote-ci-macos \
            --remote_header="Authorization=Bearer $GITHUB_TOKEN" \
            //:ios_xcframework
      - name: 'Move Envoy.xcframework.zip'
        run: mv bazel-bin/library/swift/Envoy.xcframework.zip .
      - uses: actions/upload-artifact@v2
        with:
          name: ios_framework
          path: ./Envoy.xcframework.zip
      - name: 'Build Envoy.doccarchive.zip'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./bazelw build \
            --output_groups=+swift_symbol_graph \
            --config=release-ios \
            --config=remote-ci-macos \
            --remote_header="Authorization=Bearer $GITHUB_TOKEN" \
            //library/swift:ios_lib
          ./tools/docc.sh bazel-bin/library/swift/ios_lib.symbolgraph
          zip -r Envoy.doccarchive.zip Envoy.doccarchive
      - uses: actions/upload-artifact@v2
        with:
          name: ios_docs
          path: ./Envoy.doccarchive.zip

  create_github_release:
    name: create_github_release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: [android_release_artifacts, ios_release_artifacts]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: envoy_android_aar_sources
      - uses: actions/download-artifact@v3
        with:
          name: ios_framework
      - uses: actions/download-artifact@v3
        with:
          name: ios_docs
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            envoy_android_aar_sources.tar.gz
            Envoy.xcframework.zip
            Envoy.doccarchive.zip
