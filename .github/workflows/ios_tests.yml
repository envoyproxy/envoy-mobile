name: ios_tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  swifttests:
    name: swift_tests
    runs-on: macos-12
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - id: check_context
        name: 'Check whether to run'
        run: |
          if git rev-parse --abbrev-ref HEAD | grep -q ^main$ || git diff --name-only origin/main | grep -qe common/ -e objective-c/ -e swift/ -e bazel/ -e ^\.bazelrc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/ios_tests.yml$ ; then
            echo "Tests will run."
            echo "::set-output name=run_tests::true"
          else
            echo "Skipping tests."
            echo "::set-output name=run_tests::false"
          fi
      - name: 'Install dependencies'
        run: ./ci/mac_ci_setup.sh
      - name: 'Run swift library tests'
        if: steps.check_context.outputs.run_tests == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./bazelw test \
          --experimental_ui_max_stdouterr_bytes=10485760 \
          --test_output=all \
          --config=ios \
          --build_tests_only \
          --config=remote-ci-macos \
          --remote_header="Authorization=Bearer $GITHUB_TOKEN" \
          //test/swift/...
  objctests:
    name: c_and_objc_tests
    runs-on: macos-12
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - id: check_context
        name: 'Check whether to run'
        run: |
          if git rev-parse --abbrev-ref HEAD | grep -q ^main$ || git diff --name-only origin/main | grep -qe common/ -e objective-c/ -e swift/ -e bazel/ -e ^\.bazelrc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/ios_tests.yml$ ; then
            echo "Tests will run."
            echo "::set-output name=run_tests::true"
          else
            echo "Skipping tests."
            echo "::set-output name=run_tests::false"
          fi
      - name: 'Install dependencies'
        run: ./ci/mac_ci_setup.sh
      - name: 'Run Objective-C library tests'
        if: steps.check_context.outputs.run_tests == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./bazelw test \
          --test_output=all \
          --config=ios \
          --build_tests_only \
          --config=remote-ci-macos \
          --remote_header="Authorization=Bearer $GITHUB_TOKEN" \
          //test/objective-c/...  \
          //test/cc/unit:envoy_config_test
