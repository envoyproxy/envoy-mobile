name: CI

on: [push]

jobs:
  formatall:
    name: format_all
    runs-on: ubuntu-latest
    container:
      image: envoyproxy/envoy-build:cfc514546bc0284536893cca5fa43d7128edcd35
    actions:
      - checkout: true
        submodules: true
      - name: 'Run formatters'
        run: |
          export BUILDIFIER_BIN=/usr/local/bin/buildifier
          ./tools/check_format.sh
  precommit:
    name: precommit
    runs-on: macos-latest
    actions:
      - checkout: true
      - name: 'Install precommit'
        run: brew install pre-commit
      - name: 'Run precommit'
        run: pre-commit run --all-files
  swiftlint:
    name: swift_lint
    runs-on: ubuntu-latest
    container:
      image: norionomura/swiftlint:0.33.0_swift-5.0
    actions:
      - checkout: true
      - name: 'Run SwiftLint'
        run: swiftlint lint --strict
  kotlinlint:
    name: kotlin_lint
    runs-on: ubuntu-latest
    container:
      image: openjdk:8-jdk
    actions:
      - checkout: true
        submodules: true
      - name: 'Run Kotlin lint'
        run: ./ci/kotlin_lint.sh
  sizecurrent:
    name: size_current
    runs-on: ubuntu-latest
    actions:
      - checkout: true
        submodules: true
      - name: 'Install dependencies'
        run: ./ci/linux_ci_setup.sh
      - name: 'Build test binary'
        run: ./bazelw build //test/performance:test_binary_size --config=sizeopt
  sizemaster:
    name: size_master
    runs-on: ubuntu-latest
    actions:
      - checkout: true
        submodules: true
      - name: 'Install dependencies'
        run: ./ci/linux_ci_setup.sh
      - name: 'Build test binary'
        run: |
          git checkout master && git pull origin master && git submodule update
          ./bazelw build //test/performance:test_binary_size --config=sizeopt
  iosdist:
    name: ios_mac_dist
    runs-on: macos-latest
    actions:
      - checkout: true
        submodules: true
      - name: 'Install dependencies'
        run: ./ci/mac_ci_setup.sh
      - name: 'Build Envoy.framework distributable'
        run: |
          ./bazelw build --config=ios //:ios_dist
      - run: ./bazelw build --config=ios //examples/swift/hello_world:app
        name: 'Build swift app'
      - run: npm install -g ios-sim && ios-sim start --devicetypeid "iPhone-X, 12.2"
        name: 'Start the iOS simulator'
      # Run the app in the background and redirect logs.
      - run: ./bazelw run --config=ios //examples/swift/hello_world:app &> /tmp/envoy.log &
        name: 'Run swift app'
      # Wait for the app to start and get some requests/responses.
      - run: sleep 60
        name: 'Sleep'
      # Check for the sentinel value that shows the app is alive and well.
      - run: cat /tmp/envoy.log | grep 'Hello, world!'
        name: 'Check liveliness'
  swifttests:
    name: swift_tests
    runs-on: macos-latest
    actions:
      - checkout: true
        submodules: true
      - run: ./ci/mac_ci_setup.sh
        name: 'Install dependencies'
      - run: ./bazelw test --test_output=all --build_tests_only --config=ios //library/swift/test/...
        name: 'Run Swift library tests'
  androiddistlinux:
    name: android_linux_dist
    runs-on: ubuntu-latest
    actions:
      - checkout: true
        submodules: true
      - name: 'Install dependencies'
        run: ./ci/linux_ci_setup.sh
      - name: 'Build envoy.aar distributable'
        run: |
          export PATH=/usr/lib/llvm-8/bin:$PATH
          export CC=clang
          export CXX=clang++
          export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk-bundle
          ./bazelw build --fat_apk_cpu=x86 //:android_dist
      - name: 'Build Java app'
        run: |
          export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk-bundle
          ./bazelw build --fat_apk_cpu=x86 //examples/java/hello_world:hello_envoy
      - name: 'Build kotlin app'
        run: |
          export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk-bundle
          ./bazelw build --fat_apk_cpu=x86 //examples/kotlin/hello_world:hello_envoy_kt
  kotlintests:
    name: kotlin_tests
    runs-on: ubuntu-latest
    actions:
      - checkout: true
        submodules: true
      - name: 'Install dependencies'
        run: ./ci/linux_ci_setup.sh
      - run: ./bazelw test --test_output=all --build_tests_only //library/kotlin/test/...
        name: 'Run Kotlin library tests'
  macandroid:
    name: android_mac_test
    runs-on: macos-latest
    actions:
      - checkout: true
        submodules: true
      - run: ./ci/mac_ci_setup.sh
        name: 'Install dependencies'
      - name: 'Build envoy.aar distributable'
        run: ./bazelw build --fat_apk_cpu=x86 //:android_dist
      - name: start simulator
        run: ./ci/start_simulator.sh
      - run: ./bazelw mobile-install --fat_apk_cpu=x86 --start_app //examples/java/hello_world:hello_envoy
        name: 'Start java app'
      - run: 'adb logcat -e "successful response!" -m 1'
        name: 'Check liveliness'
