name: format

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  formatall:
    name: format_all
    runs-on: ubuntu-18.04
    timeout-minutes: 45
    container:
      image: envoyproxy/envoy-build-ubuntu:5a096881181dbe478f642b7ac02a68e9591e933d
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: 'Run formatters'
        run: |
          export PATH=/opt/llvm/bin:$PATH
          export CLANG_FORMAT=clang-format
          export BUILDIFIER_BIN=/usr/local/bin/buildifier
          export BUILDOZER_BIN=/usr/local/bin/buildozer
          export ENVOY_BAZEL_PREFIX=@envoy
          ./tools/check_format.sh
  precommit:
    name: precommit
    runs-on: macOS-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v1
      - name: 'Install precommit'
        run: brew install pre-commit
      - name: 'Run precommit'
        run: pre-commit run --all-files
  swiftlint:
    name: swift_lint
    runs-on: ubuntu-18.04
    timeout-minutes: 45
    container:
      image: norionomura/swiftlint:0.33.0_swift-5.0
    steps:
      - uses: actions/checkout@v1
      - name: 'Run SwiftLint'
        run: swiftlint lint --strict
  kotlinlint:
    name: kotlin_lint
    runs-on: ubuntu-18.04
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: 'Install dependencies'
        run: ./ci/linux_ci_setup.sh
      - name: 'Run Kotlin Lint'
        run: |
          export CC=clang
          export CXX=clang++
          bazel build $(bazel query 'kind("detekt rule", //...)')
