name: ios_build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  iosbuild:
    name: ios_build
    runs-on: macOS-latest
    timeout-minutes: 75
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: framework-${{ github.sha }}
          path: dist/Envoy.framework
        name: 'Check cache'
      - run: echo "Found Envoy.framework from previous run!"
        if: steps.check-cache.outputs.cache-hit == 'true'
        name: 'Build cache hit'
      - run: ./ci/mac_ci_setup.sh
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Install dependencies'
      - run: bazelisk build --config=ios //:ios_dist
        if: steps.check-cache.outputs.cache-hit != 'true'
      - name: 'Build Envoy.framework distributable'
  swifthelloworld:
    name: swift_helloworld
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: macOS-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: 'Install dependencies'
        run: ./ci/mac_ci_setup.sh
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: framework-${{ github.sha }}
          path: dist/Envoy.framework
        name: 'Download framework'
      - run: exit 1
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Short-circuit'
      - name: 'Build swift app'
        run: bazelisk build --config=ios //examples/swift/hello_world:app
      # Run the app in the background and redirect logs.
      - name: 'Run swift app'
        run: bazelisk run --config=ios //examples/swift/hello_world:app &> /tmp/envoy.log &
      - name: 'Check connectivity'
        run: sed '/received headers with status 200/q' <(touch /tmp/envoy.log && tail -F /tmp/envoy.log)
      - name: 'Log app run'
        if: ${{ failure() || cancelled() }}
        run: cat /tmp/envoy.log
  objchelloworld:
    name: objc_helloworld
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: macOS-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: 'Install dependencies'
        run: ./ci/mac_ci_setup.sh
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: framework-${{ github.sha }}
          path: dist/Envoy.framework
        name: 'Download framework'
      - run: exit 1
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Short-circuit'
      - name: 'Build objective-c app'
        run: bazelisk build --config=ios //examples/objective-c/hello_world:app
      # Run the app in the background and redirect logs.
      - name: 'Run objective-c app'
        run: bazelisk run --config=ios //examples/objective-c/hello_world:app &> /tmp/envoy.log &
      - name: 'Check connectivity'
        run: sed '/received headers with status 200/q' <(touch /tmp/envoy.log && tail -F /tmp/envoy.log)
      - name: 'Log app run'
        if: ${{ failure() || cancelled() }}
        run: cat /tmp/envoy.log
