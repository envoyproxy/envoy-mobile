resources:
  containers:
  - container: envoy-container
    image: envoyproxy/envoy-build:cfc514546bc0284536893cca5fa43d7128edcd35
  - container: swiftlint-container
    image: norionomura/swiftlint:0.33.0_swift-5.0

trigger:
- master

jobs:
  - job: all_format
    timeoutInMinutes: 60
    pool:
      vmImage: 'Ubuntu 16.04'
    container: envoy-container
    steps:
      - checkout: self
        submodules: true
      - script: ./tools/check_format.sh
        displayName: 'Run formatters'
  - job: ios_swift_lint
    timeoutInMinutes: 60
    pool:
      vmImage: 'Ubuntu 16.04'
    container: swiftlint-container
    steps:
      - checkout: self
        submodules: true
      - script: swiftlint lint --strict
        displayName: 'Run SwiftLint'
  - job: android_dist
    pool:
      vmImage: 'Ubuntu 16.04'
    variables:
      android_ndk_home: /usr/local/lib/android/sdk/ndk-bundle
    steps:
      - checkout: self
        submodules: true
      - script: ./ci/linux_ci_setup.sh
        displayName: 'Install dependencies'
      - script: |
          export PATH=/usr/lib/llvm-8/bin:$PATH
          export CC=clang
          export CXX=clang++
        displayName: 'Set up clang toolchain'
      - script: |
          bazel build --fat_apk_cpu=x86 //:android_dist
        displayName: 'Build envoy.aar distributable'
      - task: PublishPipelineArtifact@0
        displayName: 'Publish envoy.aar distributable'
        inputs:
          artifactName: 'envoy.aar'
          targetPath: 'dist/envoy.aar'
  - job: android_java_helloworld
    dependsOn: android_dist
    timeoutInMinutes: 360
    pool:
      vmImage: 'Ubuntu 16.04'
    variables:
      android_ndk_home: /usr/local/lib/android/sdk/ndk-bundle
    steps:
      - checkout: self
        submodules: true
      - script: ./ci/linux_ci_setup.sh
        displayName: 'Install dependencies'
      - script: mkdir -p dist/
        displayName: 'Create directory for distributable'
      - task: DownloadPipelineArtifact@0
        displayName: 'Download envoy.aar distributable'
        inputs:
          artifactName: 'envoy.aar'
          targetPath: dist
      - script: bazel build --fat_apk_cpu=x86 //examples/java/hello_world:hello_envoy
        displayName: 'Build java app'
  - job: android_kotlin_helloworld
    dependsOn: android_dist
    timeoutInMinutes: 360
    pool:
      vmImage: 'Ubuntu 16.04'
    variables:
      android_ndk_home: /usr/local/lib/android/sdk/ndk-bundle
    steps:
      - checkout: self
        submodules: true
      - script: ./ci/linux_ci_setup.sh
        displayName: 'Install dependencies'
      - script: mkdir -p dist/
        displayName: 'Create directory for distributable'
      - task: DownloadPipelineArtifact@0
        displayName: 'Download envoy.aar distributable'
        inputs:
          artifactName: 'envoy.aar'
          targetPath: dist
      - script: bazel build --fat_apk_cpu=x86 //examples/kotlin/hello_world:hello_envoy_kt
        displayName: 'Build kotlin app'
  - job: iOS_dist
    timeoutInMinutes: 360
    pool:
      vmImage: 'macos-10.14'
    steps:
      - checkout: self
        submodules: true
      - script: ./envoy/ci/mac_ci_setup.sh
        displayName: 'Install dependencies'
      - script: bazel build --config=ios //:ios_dist
        displayName: 'Build Envoy.framework distributable'
      - task: PublishPipelineArtifact@0
        displayName: 'Publish Envoy.framework distributable'
        inputs:
          artifactName: 'Envoy.framework'
          targetPath: 'dist/Envoy.framework'
  - job: iOS_objc
    dependsOn: iOS_dist
    timeoutInMinutes: 360
    pool:
      vmImage: 'macos-10.14'
    steps:
      - checkout: self
        submodules: true
      - script: ./envoy/ci/mac_ci_setup.sh
        displayName: 'Install dependencies'
      - script: mkdir -p dist/Envoy.framework
        displayName: 'Create directory for distributable'
      - task: DownloadPipelineArtifact@0
        displayName: 'Download Envoy.framework distributable'
        inputs:
          artifactName: Envoy.framework
          targetPath: dist/Envoy.framework
      - script: bazel build --config=ios //examples/objective-c/hello_world:app
        displayName: 'Build objective-c app'
  - job: iOS_swift
    dependsOn: iOS_dist
    timeoutInMinutes: 360
    pool:
      vmImage: 'macos-10.14'
    steps:
      - checkout: self
        submodules: true
      - script: ./envoy/ci/mac_ci_setup.sh
        displayName: 'Install dependencies'
      - script: mkdir -p dist/Envoy.framework
        displayName: 'Create directory for distributable'
      - task: DownloadPipelineArtifact@0
        displayName: 'Download Envoy.framework distributable'
        inputs:
          artifactName: Envoy.framework
          targetPath: dist/Envoy.framework
      - script: bazel build --config=ios //examples/swift/hello_world:app
        displayName: 'Build swift app'
